数据库（database）	索引（indices）
表（tables）	    types
行（rows）	        documents            一个文档是一个可被索引的基础信息单元
字段（columns）	    fields               


文档的内部字段
_index      索引名
_type       恒为_doc
_id         id，创建时不指定则自动生产
_score      查询的匹配值（如 词频/逆向文档频率（TF/IDF）），用于排序结果集
_source     文档实际值
        
        

分片和复制（shards & replicas） 



#kibana console中操作

#列出所有索引
GET _cat/indices

#查看indices的信息
GET ${indice}

#查看indices的数据 只返回部分
GET ${indice}/_search

#使用id查询indices的数据
GET ${indice}/_doc/${_id}

#全文搜索
GET ${indice}/_search?q=${condition}

#指定字段搜索
GET ${indice}/_search
{
    "query": {
        "multi_match" : {
            "query" : "${condition}",
            "fields": ["${field1}", "${field2}"]
        }
    }
}



#单字段
{
  "query":{
    "term":{
      "_id": 100000100
    }
  }
}

#单字段
{
  "query":{
    "match":{
      "_id": 100000100
    }
  }
}

#term是不分词（不拆分搜索字）查找目标字段中是否有要查找的文字
#match是分词（拆分搜索字）查找目标字段

#多字段
{ 
  "query": { 
    "bool":{ 
      "should":{
        "match":{ "count_date":"2021-02-04" } 
      }, 
      "must": {
        "term":{ "channel_name": "xxx" } 
      }
    } 
  } 
}

#多字段
{ 
  "query": { 
    "bool":{ 
      "should":[
        { "match": { "count_date": "2021-02-04" }}
      ],
      "must":[
        { "match": { "channel_name": "xxx" }}
      ]
    } 
  } 
}


#多字段
{ 
  "query": { 
    "bool":{ 
      "must":[ 
        {"term":{ "count_date":"2021-02-04" } },
        {"term":{ "channel_name": "xxx" } }
      ]
    } 
  } 
}

# must      返回的文档必须满足must子句的条件，并且参与计算分词
# filter    返回的文档必须满足filter子句的条件，不参与计算分词
# should    返回的文档可能满足should子句的条件。在一个Bool查询中，如果没有must或者filter，有一个或者多个should子句，那么只要满足一个就可以返回。minimum_should_match参数定义了至少满足几个子句。
# must_not  返回的文档必须不满足must_not定义的条件。


#正则
{
  "query": {
    "regexp": {
      "postcode": "W[0-9].+" 
    }
  }
}

#范围
{
  "query":{
    "range" : {
      "age" : {"gte" : 10,"lt" : 20 }
    }
  }
}



########创建
#创建一篇文档，同时指定_id
PUT test/_doc/2
{
  "name":"aaa",
  "age":27,
  "desc":"AAA"
}

#创建一篇文档，不指定_id会自动生成
POST test/_doc
{
  "name":"bbb",
  "age":27,
  "desc":"AAA"
}



#######删除
DELETE test


#按条件删除
POST test/_delete_by_query   
{
  "query":{
    "term":{
      "_id": 100000100
    }
  }
}



#分词器 收索引擎的倒排索引依赖分词器

#查看分词
GET _analyze
{
  "analyzer": "standard",
  "text": "live long and prosperous, long long time a ago"
}


#mapping 数据类型

#查看所有文档的数据类型
GET _mapping

#查看文档的数据类型
GET test/_mapping


#创建文档并设置数据类型，如果不创建，则在插入时创建并自动设置数据类型
PUT test
{
  "mappings": {
    "properties": {
      "title": {
        "type": "text"
      },
      "name": {
        "type": "keyword"
      },
      "age": {
        "type": "integer"
      }
    }
  }
}

#增加mapping
PUT test/_mapping
{
  "properties": {
    "agex": {
      "type": "text"
    }
  }
}


#不能修改mapping



#http操作
curl -XGET "http://localhost:9200/_cat/health"
curl -XGET "http://localhost:9200/_cat/health?v"


#列出所有索引
curl "localhost:9200/_cat/indices?v=true"


from表示从第几行开始
size表示查询多少条文档




#模板
#包预设字段的定义  即xx字段是yy类型   索引的主分片、拷贝分片、刷新时间、自定义分析器等
#索引可使用预定义的模板进行创建，这个模板称作Index templates

get _template                 #查看所有模板
get _template/template_name   #查看指定模板





####################################################################
GET /_cluster/health                 #查看集群状态




