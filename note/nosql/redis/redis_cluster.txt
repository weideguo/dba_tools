redis cluster

每个节点最少选项配置
port 7000
cluster-enabled yes
cluster-config-file nodes.conf   ###节点配置文件 无需人为修改
cluster-node-timeout 5000
appendonly yes

正常启动单个节点后再创建集群

创建集群，命令在源代码文件的src目录下
/redis-trib.rb create --replicas 1 127.0.0.1:7000 127.0.0.1:7001 127.0.0.1:7002 127.0.0.1:7003 127.0.0.1:7004 127.0.0.1:7005

--replicas 1 表示为集群中的每个主节点创建一个从节点。

集群中的每个节点都有 1 个至 N 个复制品（replica）， 其中一个复制品为主节点（master）， 而其余的 N-1 个复制品为从节点（slave）。

redis-cli -c -p 7000   ###连接单个节点验证集群,客户端会自动切换连接点


key映射到slot，每个节点存储部分slot


cluster集群的代理
redis-cluster-proxy [OPTIONS] [node1_host:node1_port,node2_host:node2_port,...]


# 5.0以及以后使用这个操作cluster集群
redis-cli --cluster help

#列出所有节点
redis-cli  cluster nodes

子命令
create  #创建集群
redis-cli -a xxx --cluster create node1_host:node1_port node2_host:node2_port ...  --cluster-replicas 1

--cluster-replicas 每个主节点的副本数 0 1 ...


读/写key时必须往指定节点操作，如果只连接一个节点，会提示需要往哪个节点操作。因此需要在连接驱动中封装。



#####################################################################################################


redis-cli -h 127.0.0.1 -p 7001 cluster nodes                                                                           #查看节点主从信息

redis-cli --cluster del-node ip:port node_id                                                                           #删除节点 在主节点时只有为空时才能执行
redis-cli --cluster add-node 127.0.0.1:7001 127.0.0.1:7000                                                             #加节点作为主  需要调整slot才能真正使用
redis-cli --cluster add-node 127.0.0.1:7001 127.0.0.1:7000 --cluster-slave --cluster-master-id <master_id>             #加节点作为从

redis-cli --cluster reshard 10.0.0.7:7007                                                                              #迁移slot，命令行交互操作实现


##在从节点运行 主从切换（在一个从节点执行，只改变该节点的关联的主与从，不影响集群中的其他主从）
CLUSTER FAILOVER


CLUSTER FAILOVER [FORCE | TAKEOVER]
FORCE         #尽快切换，不与主进行通信
TAKEOVER      #FORCE的升级版，不需要其他节点同意即升为主


#更换节点的master
CLUSTER REPLICATE <master-node-id>






# 6.2.0引入 类似于 cluster failover，用于sentinel环境
failover     


