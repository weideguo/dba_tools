#创建容器、volume等
kubectl apply -f XXX.yaml


#查看命名空间  默认命名空间的容器 default
kubectl get namespace   


#列出所有API资源
kubectl api-resources


#获取所有节点（即物理机器）
kubectl get node
kubectl get nodes -o wide
#获取节点详细信息
kubectl describe node <node-name>



#################################################################pod
#创建pod 一个pod可以包含多个容器 共享物理资源
kubectl apply -f my-pod.yaml


#获取pod的信息
kubectl get pod

#持续输出pod信息
kubectl get pods -o wide -w

#获取pod的详细信息
kubectl describe pod <pod-name>

#删除pod
kubectl delete <pod-name>


#查看 stdout 日志
kubectl logs <pod-name>

#类似tail -f
kubectl logs -f <pod-name>


#文件复制 可以复制出或者复制入
kubectl cp <pod-name>:/bitnami/mysql/x.sql ./
kubectl cp <pod-name>:$pwd $dir


#列出指定命名空间的容器
kubectl -n test get pods
kubectl -n test get pods -o wide


#进入pod命令行
kubectl -n test exec -it <pod-name> -- bash

kubectl exec (POD | TYPE/NAME) [-c CONTAINER] [flags] -- COMMAND [args...] [options]



#################################################################
pvc pv  （PersistentVolume和PersistentVolumeClaim）

#查看pv pod可以指定使用pv存储
kubectl get pv
kubectl get pvc

#修改指定容器的磁盘容量
kubectl edit  pvc <pvc-name>      



#################################################################
#volume 通过yaml文件创建，类似于磁盘挂载到容器中，apply生成volume，然后可以在创建容器的yaml文件使用
Secret                    #
ConfigMap                 #让镜像 和 配置文件解耦
Downward API              #
ServiceAccountToken       #



kubectl get secret
kubectl describe secret <secret-name>


kubectl get secret
kubectl describe secret <secret-name>

#configmaps
kubectl get cm
kubectl describe cm <cm-name>
kubectl edit cm <cm-name>


#################################################################
#网络相关 services    通过apply yaml创建，通过selector指定绑定的app（先由控制器启动pod）
#查看网络
kubectl get svc

#端口转发
kubectl get svc -o wide


ClusterIP         默认分配的网络
LoadBalancer      映射到LoadBalancer的端口
NodePort          映射到物理机的端口（不推荐使用，因为物理机的ip可能会变）


Ingress
使用前先要安装对于的控制器
多个服务的前端（有自己的ip）
控制器有各种类型，包括 Nginx，Contour，Istio等

#################################################################

基本对象：
Pod
Service
Volume
Namespace


