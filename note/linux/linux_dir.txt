 
/                                     通常情况下，根文件系统所占空间一般应该比较小，因为其中的绝大部分文件都不需要经常改动，而且包括严格的文件和一个小的不经常改变的文件系统不容易损坏。vmlinuz标准的系统引导映像之外，根目录一般不含任何文件。所有其他文件在根文件系统的子目录中。
/boot                                 引导目录，内核保存于其中，引导加载器(bootstraploader)使用的文件，如LILO。核心映象也经常在这里，而不是在根目录。如果有许多核心映象，这个目录可能变得很大，这时可能使用单独的文件系统更好。另一个理由是要确保核心映象必须在IDE硬盘的前1024柱面内。当计算机启动时（如果有多个操作系统，有可能允许你选择启动哪一个操作系统），这些文件首先被装载。这个目录也会包含LINUX核（压缩文件vmlinuz），但LINUX核也可以存在别处，只要配置LILO并且LILO知道LINUX核在哪儿。
                                      
/bin                                  二进制可执行命令，可执行文件（命令）所有用户，包含了引导启动所需的命令或普通用户可能用的命令(可能在引导启动后)。这些命令都是二进制文件的可执行程序，多是系统中重要的系统文件。
/sbin                                 类似/bin，也用于存储二进制文件。因为其中的大部分文件多是系统管理员使用的基本的系统程序，所以虽然普通用户必要且允许时可以使用，但一般不给普通用户使用。
                                      
/root                                 超级用户的家目录。
/home                                 普通用户的家目录，比如用户user的主目录就是/home/user，可以用~user表示                  
                                      
/tmp                                  公用的临时文件存储点，临时目录（系统会自动删除）。存放程序在运行时产生的信息和数据。
                                                                   
                                      
/lib                                  标准程序设计库，又叫动态链接共享库，作用类似windows里的.dll文件，是根文件系统上的程序所需的共享库，存放了根文件系统程序运行所需的共享文件。
/lib/modules                          包含系统核心可加载各种模块，尤其是那些在恢复损坏的系统时重新引导系统所需的模块(例如网络和文件系统驱动)。
                                      
                                      
/dev                                  设备特殊文件，被抽象为文件的硬件设配，存放了设备文件，即设备驱动程序，用户通过这些文件访问外部设备。设备文件用特定的约定命名，这在设备列表中说明。设备文件在安装时由系统产生，以后可以用/dev/makedev描述。
/dev/console                          系统控制台，也就是直接和系统连接的监视器。
/dev/hd                               ide硬盘驱动程序接口。如      /dev/hda指的是第一个硬盘，had1则是指/dev/hda的第一个分区。如系统中有其他的硬盘，则依次为/dev/hdb、/dev/hdc、......；如有多个分区则依次为hda1、hda2......
/dev/sd                               scsi磁盘驱动程序接口。如有系统有scsi硬盘，就不会访问/dev/had，而会访问/dev/sda。
/dev/fd                               软驱设备驱动程序。如      /dev/fd0指系统的第一个软盘，也就是通常所说的a      盘，/dev/fd1指第二个软盘，......而/dev/fd1h1440则表示访问驱动器1中的4.5高密盘。
/dev/st                               scsi磁带驱动器驱动程序。
/dev/tty                              提供虚拟控制台支持。如      /dev/tty1指的是系统的第一个虚拟控制台，/dev/tty2则是系统的第二个虚拟控制台。
/dev/pty                              提供远程登陆伪终端支持。在进行telnet登录时就要用到/dev/pty设备。
/dev/ttys                             计算机串行接口，对于dos来说就是“com1”口。
/dev/cua                              计算机串行接口，与调制解调器一起使用的设备。
/dev/null                             “黑洞”，所有写入该设备的信息都将消失。当想要将输出信息丢弃，只要将输出信息输入到/dev/null中即可。
/dev/mouse                            访问鼠标的输入，就像访问其他文件一样。                                  
                                      
                                      
/usr                                  保存装的应用软件
/usr/x11r6                            包含xwindow系统的所有可执行程序、配置文件和支持文件。为简化x的开发和安装，x的文件没有集成到系统中。xwindow系统是一个功能强大的图形环境，提供了大量的图形工具程序。
/usr/x386                             类似/usr/x11r6，但是是专门给x11release5的。
/usr/bin                              /bin实际位置
/usr/sbin                             /sbin实际位置
/usr/man                              
/usr/doc                              
/usr/info                             帮助文档，linux文档，这些目录包含所有手册页、gnu信息文档和各种其他文档文件。   
/usr/include                          包含了c语言的头文件，这些文件多以.h结尾，用来描述c语言程序中用到的数据结构、子过程和常量。为了保持一致性，这实际上应该放在/usr/lib下，但习惯上一直沿用了这个名字。
/usr/lib                              常用的动态链接库和软件包的配置文件，包含了程序或子系统的不变的数据文件，包括一些site-wide配置文件。名字lib来源于库(library);编程的原始库也存在/usr/lib里。当编译程序时，程序便会和其中的库进行连接。也有许多程序把配置文件存入其中。
/usr/local                            本地安装的软件和其他文件放在这里。用户可能会在这发现一些比较大的软件包，如tex、emacs等。
/usr/local/lib                        本地增加的库  
/usr/local/bin                        本地增加的命令
/usr/src                              源代码，linux内核的源代码就放在/usr/src/linux里
                                      
                                      
                                      
/var                                  包含系统一般运行时要改变的数据。通常这些数据所在的目录的大小是要经常变化或扩充的。原来/var目录中有些内容是在/usr中的，但为了保持/usr目录的相对稳定，就把那些需要经常改变的目录放到/var中了。每个系统是特定的，即不通过网络与其他计算机共享。
/var/catman                           包括了格式化过的帮助(man)页。帮助页的源文件一般存在/usr/man/man中；有些man页可能有预格式化的版本，存在/usr/man/cat中。而其他的man页在第一次看时都需要格式化，格式化完的版本存在/var/man中，这样其他人再看相同的页时就无须等待格式化了。(/var/catman经常被清除，就像清除临时目录一样。)
/var/lib                              存放系统正常运行时要改变的文件。
/var/local                            存放/usr/local中安装的程序的可变数据(即系统管理员安装的程序)。注意，如果必要，即使本地安装的程序也会使用其他/var目录，例如/var/lock。
/var/lock                             锁定文件。许多程序遵循在/var/lock中产生一个锁定文件的约定，以用来支持他们正在使用某个特定的设备或文件。其他程序注意到这个锁定文件时，就不会再使用这个设备或文件。
/var/log                              各种程序的Log文件，特别是login和syslog，文件经常不确定地增长，应该定期清除
/var/log/wtmplog                      所有到系统的登录和注销
/var/log/messages                     里存储所有核心和系统程序信息。  
/var/run                              保存在下一次系统引导前有效的关于系统的信息文件。
/var/run/utmp                         包含当前登录的用户的信息。
/var/spool                            放置“假脱机(spool)”程序的目录，如mail、news、打印队列和其他队列工作的目录。
/var/spool/mail                       用户的邮箱在中。
/var/tmp                              比/tmp允许更大的或需要存在较长时间的临时文件。


/sys                                  底层硬件信息，作用与proc有些类似，但除了与proc相同的具有查看和设定内核参数功能之外，还有为Linux统一设备模型作为管理之用。相比于proc文件系统，使用sysfs导出内核数据的方式更为统一，并且组织的方式更好。
/sys/devices                          这是内核对系统中所有设备的分层次表达模型，也是/sys文件系统管理设备的最重要的目录结构，下文会对它的内部结构作进一步分析；
/sys/dev                              这个目录下维护一个按字符设备和块设备的主次号码(major:minor)链接到真实的设备(/sys/devices下)的符号链接文件，它是在内核2.6.26首次引入；
/sys/bus                              这是内核设备按总线类型分层放置的目录结构，devices中的所有设备都是连接于某种总线之下，在这里的每一种具体总线之下可以找到每一个具体设备的符号链接，它也是构成Linux统一设备模型的一部分；
/sys/class                            这是按照设备功能分类的设备模型，如系统所有输入设备都会出现在/sys/class/input之下，而不论它们是以何种总线连接到系统。它也是构成Linux统一设备模型的一部分；
/sys/block                            这里是系统中当前所有的块设备所在，只有在打开了CONFIG_SYSFS_DEPRECATED配置下编译才会有这个目录的存在，并且在2.6.26内核中已正式移到/sys/class/block，旧的接口/sys/block为了向后兼容保留存在
/sys/firmware                         这里是系统加载固件机制的对用户空间的接口，关于固件有专用于固件加载的一套API，在附录LDD3一书中有关于内核支持固件加载机制的更详细的介绍；
/sys/fs                               这里按照设计是用于描述系统中所有文件系统，包括文件系统本身和按文件系统分类存放的已挂载点，但目前只有fuse,gfs2等少数文件系统支持sysfs接口，一些传统的虚拟文件系统(VFS)层次控制参数仍然在sysctl(/proc/sys/fs)接口中中；
/sys/kernel                           这里是内核所有可调整参数的位置，目前只有uevent_helper,kexec_loaded,mm,和新式的slab分配器等几项较新的设计在使用它，其它内核可调整参数仍然位于sysctl(/proc/sys/kernel)接口中;
/sys/module                           这里有系统中所有模块的信息，不论这些模块是以内联(inlined)方式编译到内核映像文件(vmlinuz)中还是编译为外部模块(ko文件)，并且在这个目录下会出现一些属性文件和属性目录来表示此外部模块的一些信息，如版本号、加载状态、所提供的驱动程序等。     
/sys/module/<module_name>             编译为外部模块(ko文件)在加载后会出现对应的；编译为内联方式的模块则只在当它有非0属性的模块参数时会出现 
/sys/module/printk/parameters/time    这个可读写参数控制着内联模块printk在打印内核消息时是否加上时间前缀；/sys/modules/<module_name>/parameters/<param_name>，所有内联模块的参数也可以由"<module_name>.<param_name>=<value>"的形式写在内核启动参数上；如启动内核时加上参数"printk.time=1"与向此写入1的效果相同 
/sys/power                            这里是系统中电源选项，这个目录下有几个属性文件可以用于控制整个机器的电源状态，如可以向其中写入控制命令让机器关机、重启等。
/sys/slab                             对应2.6.23内核，在2.6.24以后移至/sys/kernel/slab  
/sys/kernel/slab                      从2.6.23开始可以选择SLAB内存分配器的实现，并且新的SLUB（UnqueuedSlabAllocator）被设置为缺省值；如果编译了此选项，在/sys下就会出现/sys/slab，里面有每一个kmem_cache结构体的可调整参数。对应于旧的SLAB内存分配器下的/proc/slabinfo动态调整接口，新式的/sys/kernel/slab/<slab_name>接口中的各项信息和可调整项显得更为清晰。


/proc                                 虚拟文件夹，内存中的实时信息，是系统内存的映射。可直接访问这个目录来获取系统信息，它并不存在于某个磁盘上，而是由核心在内存中产生。
/proc/$pid                            关于进程$pid的信息目录。每个进程在/proc下有一个名为自己进程号的目录。
/proc/cpuinfo                         存放处理器(cpu)的信息，如cpu的类型、制造商、型号和性能等。
/proc/devices                         当前运行的核心配置的设备驱动的列表。
/proc/dma                             显示当前使用的dma通道。
/proc/filesystems                     核心配置的文件系统信息。
/proc/interrupts                      显示被占用的中断信息和占用者的信息，以及被占用的数量。
/proc/ioports                         当前使用的i/o端口。
/proc/kcore                           系统物理内存映像。与物理内存大小完全一样，然而实际上没有占用这么多内存；它仅仅是在程序访问它时才被创建。(注意      除非你把它拷贝到什么地方，否则/proc下没有任何东西占用任何磁盘空间。)
/proc/kmsg                            核心输出的消息。也会被送到syslog。
/proc/ksyms                           核心符号表。
/proc/loadavg                         系统“平均负载”；3个没有意义的指示器指出系统当前的工作量。
/proc/meminfo                         各种存储器使用信息，包括物理内存和交换分区(swap)。
/proc/modules                         存放当前加载了哪些核心模块信息。
/proc/net                             网络协议状态信息。
/proc/self                            存放到查看/proc的程序的进程目录的符号连接。当2个进程查看/proc时，这将会是不同的连接。这主要便于程序得到它自己的进程目录。
/proc/stat                            系统的不同状态，例如，系统启动后页面发生错误的次数。
/proc/uptime                          系统启动的时间长度。
/proc/version                         核心版本。
                                      
                                      
/etc                                  系统管理和配置文件，配置文件，目录包含各种系统配置文件，许多网络配置文件也在/etc中。
/etc/rc                               
/etc/rc.d                             
/etc/rc*.d                            启动的配置文件和脚本，启动、或改变运行级时运行的脚本或脚本的目录。
/etc/passwd                           用户数据库，其中的域给出了用户名、真实姓名、用户起始目录、加密口令和用户的其他信息。
/etc/fdprm                            软盘参数表，用以说明不同的软盘格式。可用setfdprm进行设置。更多的信息见setfdprm的帮助页。
/etc/fstab                            指定启动时需要自动安装的文件系统列表。也包括用swapon-a启用的swap区的信息。
/etc/group                            类似/etc/passwd，但说明的不是用户信息而是组的信息。包括组的各种数据。
/etc/inittab                          init的配置文件。
/etc/issue                            包括用户在登录提示符前的输出信息。通常包括系统的一段短说明或欢迎信息。具体内容由系统管理员确定。
/etc/magic                            “file”的配置文件。包含不同文件格式的说明，“file”基于它猜测文件类型。
/etc/motd                             motd是messageoftheday的缩写，用户成功登录后自动输出。内容由系统管理员确定。常用于通告信息，如计划关机时间的警告等。
/etc/mtab                             当前安装的文件系统列表。由脚本(scritp)初始化，并由mount命令自动更新。当需要一个当前安装的文件系统的列表时使用(例如df命令)。
/etc/shadow                           在安装了影子(shadow)口令软件的系统上的影子口令文件。影子口令文件将/etc/passwd文件中的加密口令移动到/etc/shadow中，而后者只对超级用户(root)可读。这使破译口令更困难，以此增加系统的安全性。
/etc/login.defs                       login命令的配置文件。
/etc/printcap                         但针对打印机。语法不同。
/etc/profile                          
/etc/csh.login                        
/etc/csh.cshrc                        登录或启动时bourne或cshells执行的文件。这允许系统管理员为所有用户建立全局缺省环境。
/etc/securetty                        确认安全终端，即哪个终端允许超级用户(root)登录。一般只列出虚拟控制台，这样就不可能(至少很困难)通过调制解调器(modem)或网络闯入系统并得到超级用户特权。
/etc/shells                           列出可以使用的shell。chsh命令允许用户在本文件指定范围内改变登录的shell。提供一台机器ftp服务的服务进程ftpd检查用户shell是否列在/etc/shells文件中，如果不是，将不允许该用户登录。
/etc/termcap                          终端性能数据库。说明不同的终端用什么“转义序列”控制。写程序时不直接输出转义序列(这样只能工作于特定品牌的终端)，而是从/etc/termcap中查找要做的工作的正确序列。这样，多数的程序可以在多数终端上运行。
                                      
                                      
/media                                挂载文件夹
/mnt                                  挂载文件夹，系统提供这个目录是让用户临时挂载其他的文件系统。系统管理员临时mount的安装点。程序并不自动支持安装到/mnt。
/mnt/dosa                             使用MSDOS文件系统的软驱，
/mnt/exta                             使用ext2文件系统的软驱
/mnt/cdrom                            光驱
       
       
/lost+found                           这个目录平时是空的，系统非正常关机而留下“无家可归”的文件
/opt                                  装大型软件（非强制）
