curl  ##运行url，如下载文件

curl -d "p1=v1&p2=v2" "http://example"  #post

curl -k    #忽略https未信任证书错误

curl -u user:name ...
# 等同于
base64_str=`echo user:name | base64`
curl -H "Authorization: Basic ${base64_str}" ...



wget  ##通过url下载
scp local_file remote_username@remote_ip:remote_filefolder   ##从本地复制到远端，反过来即为远端复制到本地

scp -oPort=3600 -r ...
-oPort -P       ##指定使用的端口
-r              ##复制目录
-C                ##压缩传输

-o              ##与ssh的使用一致
-oPort=3600
-o "Port 3600"  ##格式跟~/.ssh/config的一致


sshpass -p my_password scp ...
sshpass -p my_password ssh ...
ssh [user@]hostname [command]   #远程执行


压缩传输

scp -C filename remote_user@remote_host:remote_path

scp -oStrictHostKeyChecking=no -P 16333 -Cr filename remote_user@remote_host:remote_path

#带压缩
rsync -zav --rsh='ssh -p 22' filename remote_user@remote_host:remote_path

#非交互传输
rsync -av dirname --rsh='sshpass -p ssh_password ssh -p 22'  root@172.16.2.150:/root/test

#非交互传输 自动接受未知的主机
rsync -av dirname --rsh='sshpass -p ssh_password ssh -oStrictHostKeyChecking=no -p 22'  root@172.16.2.150:/root/test


-z 压缩

--bwlimit 限制带宽

#断点续传 中断时再次启动默认会删除传输到一半的文件 可以选择以下参数实现断点续传
--partial
--partial-dir=DIR         #指定一个目录缓存传到一半的文件
-P



rsync
两种模式
C/S 
    server
        rsync --daemon --config=/data/rsyncd.conf
    client
        rsync -azvrP path_to_send rsync://remote_user@remote_host:port/block_name        ##block_name为server端配置文件中的块名
        
命令行（使用ssh协议）
        rsync [OPTION]... SRC [SRC]... [USER@]HOST::DEST             ##从源端（SRC，可以多个）同步文件到目的端（DEST）


客户端    
rsync rsyncd.secrets --password-file=test.secrets rsync://remote_user@remote_host:port/block_name    
    
使用密码文件权限必须其他账号不能访问（只是对于rsync模式有效，ssh模式不能使用密码文件）    
    
#进入stfp交互模式
sftp -o Port=22  root@10.10.1.10
 #在本地执行
 lpwd
 lcd
 lls
 #对远端主机执行
 pwd
 cd
 ls
 #上传下载
 get remote_file local_path
 put local_file remote_path


#实时文件同步
inotify-tools 监听文件然后使用rsync推送文件



nc
###端口扫描
nc -v -w 2 -z 192.168.5.230 21               

##扫描udp端口
nc -u 127.0.0.1 9000
nc -u -z -v -w 2 127.0.0.1 9000    #非交互模式

###监听端口
nc -lp 65500                   ###旧版
nc -l 65500                    ###新版
nc --udp -l 65500            ###新版 默认使用TCP协议

nc -lp 65500  &                ##后台运行
nc -l -w 10000 6500 &        ##


#使用不同网卡/ip监听  同一主机中相同端口不同ip之间不互相冲突，即可以同时监听  ipA:portX ipB:portX
nc -l 192.168.253.128  12345
nc -lv 192.168.253.128  12345
nc -lv 127.0.0.1 12345

###远程复制 host2到host1
##1234为端口，没有限制;操作步骤有要求
host1: nc -l 1234 > text.txt
host2: nc host1_ip 1234 < text.txt      

host1: nc -l 1234 | tar zxvf -
host2: tar zcvf - text.txt | nc host1_ip 1234

###聊天
host1: nc -lp 1234
host2: nc host1_ip 1234


nc传输
host2传输到host1
host1: nc -l 1234 | tar zxvf -
host2: tar zcvf - test | nc 192.168.1.176 1234


###操作memcached
print "get key_name" | nc $ip_address $port

