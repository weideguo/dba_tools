c/c++ 五大内存分区 

栈：由编译器在需要的时候分配，在不需要的时候自动清理的变量的存储区。里面的变量通常是局部变量、函数参数等。

堆：由new分配的内存块，他们的释放编译器不去管，由应用程序去控制，一般一个new就要对应一个delete。如果程序员没有释放掉，那么在程序结束后，操作系统会自动回收。

自由存储区：由malloc等分配的内存块，和堆是十分相似的，用free来结束自己的生命的。

全局/静态存储区：全局变量和静态变量被分配到同一块内存中。C语言中又分为初始化的和未初始化的；C++里面没有这个区分，共同占用同一块内存区。

常量存储区：存放常量，不允许修改。




内存泄漏（memory leak）：程序在申请内存后，无法释放已申请的内存空间。 
应用程序一般使用malloc、realloc、new等函数从堆中分配到一块内存块，使用完成后，程序必须负责相应的释放。
在C中使用free(),C++中delete、delete[]、free()。而Java中由于垃圾回收机制不用手动释放。 
如果内存不能释放，这块内存就不能再次使用，我们就说这块内存泄漏了。


内存溢出（out of memory）：程序要求的内存，超出了系统所能分配的范围。如在一个域中输入的数据超过了它的要求就会引发数据溢出问题，多余的数据就可以作为指令在计算机上运行。
