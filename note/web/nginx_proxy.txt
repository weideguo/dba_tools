worker_processes  1;
events {
    worker_connections  1024;
}
http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;
    
    
    server {
        server_name  somename;
        access_log logs/access_proxy-80.log;
        resolver 114.114.114.114;
        listen 80;
        location / {
            proxy_pass http://$http_host$request_uri;
            proxy_set_header HOST $http_host;
            proxy_buffers 256 4k;
            proxy_max_temp_file_size 0k;
            proxy_connect_timeout 30;
            proxy_send_timeout 60;
            proxy_read_timeout 60;
            proxy_next_upstream error timeout invalid_header http_502;
        }
    }
    
    server {
        server_name localhost;
        access_log logs/access_proxy-443.log;
        resolver 114.114.114.114;
        listen 443;
        proxy_connect;
        
        location / {
            #proxy_pass $scheme://$host$request_uri;    #适应http以及https
            proxy_pass https://$host$request_uri;
        }
    }
}

#正向代理http 使用
#curl --proxy "proxy_server:80" "http://web_hostname"

#正向代理https时需要在编译时引入第三方模块 
#./configure --add-module=/path/to/ngx_http_proxy_connect_module
    
#使用代理
#curl --proxy "proxy_server:443" "https://web_hostname"




