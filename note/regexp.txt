元字符
. 匹配除了换行符号以外的任意字符
\w 匹配字母或数字或下划线或汉字
\d 匹配数字
\b 匹配单词的开始或结束
\s 匹配任意的空白符
^  匹配字符串的开始
$  匹配字符串的结束

\ 转义符

重复
* 重复0次或更多次
+ 重复1次或更多次
？重复0次或1次
{n} 重复n次
{n,} 重复n次或更多次
{n,m} 重复n到m次

[ ]		如[aeiou]匹配任意其中任意一个字母 	
|		分枝条件，匹配|两边任意一条件即可,可以使用【(),[]】包起
( )		分组，指定子表达式

反义
\W 匹配任意不是字母，数字，下划线，汉字的字符
\S 匹配任意不是空白符号的字符
\D 匹配不是数字的字符
\B 匹配不是单词开头或结尾的位置
[^X] 匹配除了X以外的任意字符
[^aeiou] 匹配除了aeiou几个字母以外的任意字符
?! 匹配除外的，如【 ?!abc 】,匹配不为abc的字符

后向引用，用于重复收索前面某个分组匹配的单词,如\b(\w+)\b\s+\1\b可以用来匹配重复的单词，编号为1的分组
(exp)		匹配exp
(?<>exp)	匹配exp，命名文本到name组里
(?:exp)		匹配exp，不捕获匹配的文本，也不给次分组分配组号
(?=exp)		匹配exp前面的位置
(?<=exp)	匹配exp后面的位置
(?!exp)		匹配后面跟的不是exp的位置
(?<!exp)	匹配前面不是exp的位置
(?#comment) 注释使用
exp、comment都不是内置命令，仅为方便说明而已
零宽断言  指定位置满足一定条件

断言
(?=expression)expression
(?<expression)expression
匹配特定字符串后的字符
(?<=exp).*   	取字符串exp之后的内容
.*(?=exp) 		取字符串exp之前的内容
(?<=exp1).*?(?=exp2)  取exp1和exp2之间的内容


懒惰限定符
*？		重复多次，但尽可能减少
+？		重复一次多更多次，尽可能减少重复
？？ 	重复0次或1次，尽可能减少重复
{n,m}？	重复n到m次，尽可能减少重复
{n，}？ 重复n次以上，尽可能减少重复

平衡组/递归匹配
使用堆栈进项匹配
(?<name> ) 压栈
(?<-name>) 弹栈
(?(name)yes|no)  判定栈是否为空
name为非关键字


#demo
前面7个数不相同
(\d)(?!\1)(\d)(?!\1|\2)(\d)(?!\1|\2|\3)(\d)(?!\1|\2|\3|\4)(\d)(?!\1|\2|\3|\4|\5)(\d)(?!\1|\2|\3|\4|\5|\6)(\d)
\1 表示第一个()里面的内容
$1 引用第一个()里面的内容

内网ip
172.16-31.
10.
192.168.
(^172\.([1][6-9]|[2]\d|3[01])\.)|(^192\.168\.)|(^10\.)
